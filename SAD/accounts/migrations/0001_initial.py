# Generated by Django 3.0.5 on 2020-04-16 12:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=254)),
                ('family_name', models.CharField(blank=True, max_length=254)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_doctor', models.BooleanField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientProfileInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(blank=True, upload_to='profile_pics')),
                ('birthday', models.DateField()),
                ('medical_condition', models.CharField(blank=True, max_length=254, null=True)),
                ('credit', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('height', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('blood_type', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('AB', 'AB'), ('O', 'O')], max_length=4, null=True)),
                ('blood_plus_minus', models.CharField(blank=True, choices=[('M', '-'), ('P', '+')], max_length=2, null=True)),
                ('allergies', models.CharField(blank=True, max_length=254, null=True)),
                ('medical_emergency_contact', models.CharField(error_messages={'شماره وارد شده معتبر نیست.': 'incomplete'}, max_length=13, validators=[django.core.validators.RegexValidator('^[0]?9[0-9]{9}$', 'شماره موبایل معتبر وارد کنید')])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DoctorProfileInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portfolio_site', models.URLField(blank=True)),
                ('profile_pic', models.ImageField(blank=True, upload_to='profile_pics')),
                ('specialty_bins', models.CharField(choices=[('ﭼﺸﻢ ﭘﺰﺷﮑﯽ', 'ﭼﺸﻢ ﭘﺰﺷﮑﯽ'), ('ﺭﺍﺩﯾﻮﻟﻮﮊﯼ', 'ﺭﺍﺩﯾﻮﻟﻮﮊﯼ'), ('ﭘﻮﺳﺖ ﻭ ﻣﻮ', 'ﭘﻮﺳﺖ ﻭ ﻣﻮ'), ('ﭘﺰﺷﮑﯽﻫﺴﺘﻪﺍﯼ', 'ﭘﺰﺷﮑﯽﻫﺴﺘﻪﺍﯼ'), ('ﺍﺭﺗﻮﭘﺪﯼ', 'ﺍﺭﺗﻮﭘﺪﯼ'), ('ﻗﻠﺐﻭﻋﺮﻭﻕ', 'ﻗﻠﺐﻭﻋﺮﻭﻕ'), ('ﻃﺐ ﻓﯿﺰﯾﮑﯽ', 'ﻃﺐ ﻓﯿﺰﯾﮑﯽ'), ('ﻣﻐﺰﻭﺍﻋﺼﺎﺏ', 'ﻣﻐﺰﻭﺍﻋﺼﺎﺏ'), ('ﮔﻮﺵ ﺣﻠﻖ ﺑﯿﻨﯽ', 'ﮔﻮﺵ ﺣﻠﻖ ﺑﯿﻨﯽ'), ('ﺟﺮﺍﺣﯽ ﻣﻐﺰﻭﺍﻋﺼﺎﺏ', 'ﺟﺮﺍﺣﯽ ﻣﻐﺰﻭﺍﻋﺼﺎﺏ'), ('ﭘﺎﺗﻮﻟﻮﮊﯼ', 'ﭘﺎﺗﻮﻟﻮﮊﯼ'), ('ﮐﻠﯿﻪ ﻭ ﻣﺠﺎﺭﯼﺍﺩﺭﺍﺭﯼ', 'ﮐﻠﯿﻪ ﻭ ﻣﺠﺎﺭﯼﺍﺩﺭﺍﺭﯼ'), ('ﭘﺮﺗﻮﺩﺭﻣﺎﻧﯽ - ﺭﺍﺩﯾﻮﺗﺮﺍﭘﯽ', 'ﭘﺮﺗﻮﺩﺭﻣﺎﻧﯽ - ﺭﺍﺩﯾﻮﺗﺮﺍﭘﯽ'), ('ﺟﺮﺍﺣﯽ ﻋﻤﻮﻣﯽ', 'ﺟﺮﺍﺣﯽ ﻋﻤﻮﻣﯽ'), ('ﺯﻧﺎﻥ ﻭ ﺯﺍﯾﻤﺎﻥ', 'ﺯﻧﺎﻥ ﻭ ﺯﺍﯾﻤﺎﻥ'), ('ﺭﻭﺍﻧﭙﺰﺷﮑﯽ', 'روانپزشکی'), ('ﺩﺍﺧﻠﯽ', 'ﺩﺍﺧﻠﯽ'), ('ﻃﺐﮐﺎﺭ', 'ﻃﺐﮐﺎﺭ'), ('ﮐﻮﺩﮐﺎﻥ', 'ﮐﻮﺩﮐﺎﻥ'), ('ﺑﯿﻬﻮﺷﯽ', 'ﺑﯿﻬﻮﺷﯽ'), ('ﻋﻔﻮﻧﯽ', 'ﻋﻔﻮﻧﯽ'), ('-', '-')], default='-', max_length=254)),
                ('specialty', models.CharField(blank=True, max_length=254, null=True)),
                ('degree', models.CharField(choices=[('دکتری', 'دکتری'), ('کارشناسی', 'کارشناسی'), ('کارشناسی\u200cارشد', 'کارشناسی ارشد'), ('تخصص', 'تخصص'), ('فوق\u200cتخصص', 'فوق تخصص'), ('-', '-')], default='-', max_length=254)),
                ('educational_background', models.CharField(blank=True, max_length=254, null=True)),
                ('score', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('fee', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('on_site_fee', models.BooleanField(blank=True, default=False)),
                ('address', models.CharField(max_length=500)),
                ('credit', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
